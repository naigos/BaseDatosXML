/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectoxmlbd;

import java.awt.event.ItemEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.omg.PortableInterceptor.SYSTEM_EXCEPTION;
import org.xmldb.api.modules.XMLResource;

/**
 *
 * @author Nacho
 */
public class Peliculas extends javax.swing.JFrame {

    DefaultTableModel modelo;
    XMLResource res;
    String[][] consulta;
    static String usuario, pass, ruta;

    public Peliculas() {
        initComponents();
        cargarTabla();
        cargarOrdenar();
        cargarAscDesc();
    }
    
    public void cargarOrdenar(){
        cbordenar.addItem("");
        cbordenar.addItem("Ordenar por id");
        cbordenar.addItem("Ordenar por nombre");
        cbordenar.addItem("Ordenar por genero");
        cbordenar.addItem("Ordenar por precio");
    }
    
    public void cargarAscDesc(){
        cbAscDesc.addItem("Mayor");
        cbAscDesc.addItem("Menor");
        cbAscDesc.setEnabled(false);
    }
    
    public void ordenarTabla(String sel, int n){
        String s="";
        if(sel.equalsIgnoreCase("Ordenar por id")){
            s="id";
        }else if(sel.equalsIgnoreCase("Ordenar por nombre")){
            s="nombre";
        }else if(sel.equalsIgnoreCase("Ordenar por genero")){
            s="genero";
        }else if(sel.equalsIgnoreCase("Ordenar por precio")){
            s="precio";
        }else{
            s="";
        }
        
        modelo.setRowCount(0);
        
        if(s.equalsIgnoreCase("")){
            cargarTabla();
        }else{
            try {
                consulta = BdXml.consultaOrder("/peliculas/pelicula", s, n);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(rootPane, "Error al recuperar información");
            }
            if (consulta != null) {
                modelo = (DefaultTableModel) jTable1.getModel();
                for (int i = 0; i < consulta.length; i++) {
                    modelo.addRow(new Object[]{consulta[i][0], consulta[i][1], consulta[i][2], consulta[i][3]});
                }
            }
        }
    }

    public void cargarTabla() {
        try {
            consulta = BdXml.consulta("/peliculas/pelicula");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Error al recuperar información");
        }
        if (consulta != null) {
            modelo = (DefaultTableModel) jTable1.getModel();
            for (int i = 0; i < consulta.length; i++) {
                modelo.addRow(new Object[]{consulta[i][0], consulta[i][1], consulta[i][2], consulta[i][3]});
            }
        }
    }

    public boolean isInteger(String s) {
        try {
            Integer.parseInt(s);
        } catch (NumberFormatException e) {
            return false;
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        tid = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tgenero = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tnombre = new javax.swing.JTextField();
        tprecio = new javax.swing.JTextField();
        binsertar = new javax.swing.JButton();
        bdelete = new javax.swing.JButton();
        bmodificar = new javax.swing.JButton();
        bconsultar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        cbordenar = new javax.swing.JComboBox();
        cbAscDesc = new javax.swing.JComboBox();

        jButton3.setText("jButton3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre", "Género", "Precio"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Id");

        jLabel2.setText("Genero");

        jLabel3.setText("Nombre");

        jLabel4.setText("Precio");

        binsertar.setText("Insertar");
        binsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                binsertarActionPerformed(evt);
            }
        });

        bdelete.setText("Borrar (Por id)");
        bdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bdeleteActionPerformed(evt);
            }
        });

        bmodificar.setText("Modificar (Por id)");
        bmodificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bmodificarActionPerformed(evt);
            }
        });

        bconsultar.setText("Consultar (Por id)");
        bconsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bconsultarActionPerformed(evt);
            }
        });

        jLabel5.setText("Base de datos XML de peliculas");

        cbordenar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbordenarItemStateChanged(evt);
            }
        });
        cbordenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbordenarActionPerformed(evt);
            }
        });

        cbAscDesc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbAscDescItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(tgenero, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                            .addComponent(tid))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(tnombre, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(tprecio))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel5)))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bmodificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(binsertar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bdelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bconsultar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbordenar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cbAscDesc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbordenar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbAscDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(binsertar)
                    .addComponent(bdelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tgenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tprecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bmodificar)
                    .addComponent(bconsultar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bdeleteActionPerformed
        if (tid.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Debes escribir el id a borrar");
        }else if(!isInteger(tid.getText())){
            JOptionPane.showMessageDialog(rootPane, "El id debe de ser un numero");
        }else {
            int n = BdXml.borrar(tid.getText().toString());
            if (n < 1) {
                JOptionPane.showMessageDialog(rootPane, "No se puede borrar algo que no existe pillín, inserta un id válido");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Borrado");
                modelo.setRowCount(0);
                cargarTabla();
            }
        }
    }//GEN-LAST:event_bdeleteActionPerformed

    private void binsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_binsertarActionPerformed
        if (tid.getText().equals("") && tnombre.getText().equals("") && tgenero.getText().equals("") && tprecio.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Debes escribir todos los campos");
        } else if(!isInteger(tid.getText()) || !isInteger(tprecio.getText())){
            JOptionPane.showMessageDialog(rootPane, "El id y el precio deben de ser numeros");
        } else {
            int n = BdXml.insertar(tid.getText().toString(), tnombre.getText().toString(), tgenero.getText().toString(), tprecio.getText().toString());
            if (n > 0) {
                JOptionPane.showMessageDialog(rootPane, "No insertado, se te adelantaron ya existe un elemento con ese id");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Insertado");
                modelo.setRowCount(0);
                cargarTabla();
            }
        }
    }//GEN-LAST:event_binsertarActionPerformed

    private void bmodificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bmodificarActionPerformed
        if (tid.getText().equals("") && tnombre.getText().equals("") && tgenero.getText().equals("") && tprecio.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Debes escribir todos los campos");
        } else if(!isInteger(tid.getText()) || !isInteger(tprecio.getText())){
            JOptionPane.showMessageDialog(rootPane, "El id y el precio deben de ser numeros");
        } else {
            int n = BdXml.modificar(tid.getText().toString(), tnombre.getText().toString(), tgenero.getText().toString(), tprecio.getText().toString());
            if (n < 1) {
                JOptionPane.showMessageDialog(rootPane, "No modificado, sólo existe en tu mente en esta base de datos no");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Modificado");
                modelo.setRowCount(0);
                cargarTabla();
            }
        }
    }//GEN-LAST:event_bmodificarActionPerformed

    private void bconsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bconsultarActionPerformed
        if (tid.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Debes escribir el id a consultar");
        }else if(!isInteger(tid.getText())){
            JOptionPane.showMessageDialog(rootPane, "El id debe de ser un numero");
        }else {
            try {
                consulta = BdXml.consulta("/peliculas/pelicula[id="+tid.getText()+"]");
                if(consulta.length > 0){
                    for (int i = 0; i < consulta.length; i++) {
                    tid.setText(consulta[i][0].toString().trim());
                    tnombre.setText(consulta[i][1].toString().trim());
                    tgenero.setText(consulta[i][2].toString().trim());
                    tprecio.setText(consulta[i][3].toString().trim());
                    }
                }else{
                    JOptionPane.showMessageDialog(rootPane, "No hay ninguna pelicula con ese id");
                }                
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(rootPane, "Error al consultar el id");
            }
        }
    }//GEN-LAST:event_bconsultarActionPerformed

    private void cbordenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbordenarActionPerformed
        
    }//GEN-LAST:event_cbordenarActionPerformed

    private void cbordenarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbordenarItemStateChanged
        if(evt.getStateChange() == ItemEvent.DESELECTED){
            String sel = cbordenar.getSelectedItem().toString();
            if(sel.equals("")){
                cbAscDesc.setEnabled(false); 
                cargarTabla();                
            }else{                
                cbAscDesc.setEnabled(true);
                String ad = cbAscDesc.getSelectedItem().toString();
                if(ad.equalsIgnoreCase("mayor")){
                    ordenarTabla(sel, 1); //1 es ordenar a mayor
                }else{
                    ordenarTabla(sel, 0); //0 es ordenar a menor
                }
            }                  
        }    
    }//GEN-LAST:event_cbordenarItemStateChanged

    private void cbAscDescItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbAscDescItemStateChanged
        if(evt.getStateChange() == ItemEvent.DESELECTED){
            String ad = cbAscDesc.getSelectedItem().toString();
            String sel = cbordenar.getSelectedItem().toString();
            if(ad.equalsIgnoreCase("mayor")){
                ordenarTabla(sel, 1); //1 es ordenar a mayor
            }else{
                ordenarTabla(sel, 0); //0 es ordenar a menor
            }            
        }
    }//GEN-LAST:event_cbAscDescItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bconsultar;
    private javax.swing.JButton bdelete;
    private javax.swing.JButton binsertar;
    private javax.swing.JButton bmodificar;
    private javax.swing.JComboBox cbAscDesc;
    private javax.swing.JComboBox cbordenar;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField tgenero;
    private javax.swing.JTextField tid;
    private javax.swing.JTextField tnombre;
    private javax.swing.JTextField tprecio;
    // End of variables declaration//GEN-END:variables
}
